name: dev_2_장고_템플릿_기반_깃허브_액션스_추가_및_배포-2025-06-16

on:
  push:
    branches: 
      - dev_2_장고_템플릿_기반_깃허브_액션스_추가_및_배포-2025-06-16

jobs:
 dev_2_deploy:
    name: Deploy to EC2
    runs-on: ubuntu-latest

    steps:
      # actions/checkout@v3: 소스코드를 runner에 내려받습니다.
      - name: Checkout repository
        uses: actions/checkout@v3
      
      - name: Create remote directory on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            sudo rm -rf /home/ubuntu/django-react-hjs-distribute
            mkdir -p /home/ubuntu/django-react-hjs-distribute              

      #주로 **로컬 코드(깃허브 저장소)**를 원격 서버(예: EC2)에 rsync 명령어를 통해 빠르게 복사/배포    
      - name: Rsync source code to EC2
        uses: burnett01/rsync-deployments@4.1
        with:
          switches: -avzr --delete
          remote_path: /home/ubuntu/django-react-hjs-distribute/
          remote_host: ${{ secrets.EC2_HOST }}
          remote_user: ${{ secrets.EC2_USER }}
          remote_key: ${{ secrets.EC2_KEY }}
     
      - name: Create remote directory on EC2
        uses: appleboy/ssh-action@master
        with:
          host: ${{ secrets.EC2_HOST }}
          username: ${{ secrets.EC2_USER }}
          key: ${{ secrets.EC2_KEY }}
          script: |
            cd /home/ubuntu/django-react-hjs-distribute/backend/

            # 1. 시스템 업데이트 및 파이썬, 가상환경 패키지 설치
            sudo apt update
            sudo apt install -y python3 python3-pip python3-venv

            # 2. 가상환경 생성 (없으면 생성)
            if [ ! -d "venv" ]; then
                python3 -m venv venv
            fi

            # 3. 가상환경 활성화
            source venv/bin/activate

            # 4. pip 최신 버전으로 업그레이드
            pip install --upgrade pip

            # 5. 필수 빌드 도구 설치 (mysqlclient, pillow 빌드에 필요)
            sudo apt-get update && sudo apt-get install -y \
                gcc \
                default-libmysqlclient-dev \
                pkg-config \
                build-essential \
                libjpeg-dev \
                zlib1g-dev \
                libfreetype6-dev \
                liblcms2-dev \
                libwebp-dev \
                libtiff5-dev \
                tk-dev \
                && sudo rm -rf /var/lib/apt/lists/*
            
            # 6. requirements.txt에 명시된 패키지 설치
            pip install -r requirements.txt

            # 7. Django 마이그레이션 수행
            python manage.py makemigrations --no-input
            python manage.py migrate --no-input

            # 8. 기존 8080 포트 사용중인 프로세스 종료
            sudo lsof -t -i tcp:8080 | xargs -r kill -9

            # 9. Django 서버 백그라운드 실행 (로그 server.log 저장)
            nohup python manage.py runserver 0.0.0.0:8080 > server.log 2>&1 &
         